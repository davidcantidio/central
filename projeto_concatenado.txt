#arquivo /home/david/Documentos/mandala/instagram_api.py
import json
from google.oauth2 import service_account
from googleapiclient.discovery import build
from google.cloud import bigquery
import pandas as pd

# Carregar as informações de autenticação do arquivo config.json
config_file = 'config.json'
credentials = service_account.Credentials.from_service_account_file(config_file)

# Autenticar-se com o Google Sheets
sheets_service = build('sheets', 'v4', credentials=credentials)

# Autenticar-se com o Google BigQuery
bigquery_client = bigquery.Client(credentials=credentials)

# ID da planilha no Google Sheets
spreadsheet_id = '1-w9SVZIDUDCNKESOwjQL56-o-QwxnqSL4p3d3uZ3MQo'

# Nome da planilha com os dados dos clientes
sheet_name = 'dados do cliente'

# Obter os dados dos clientes
sheet = sheets_service.spreadsheets().values().get(spreadsheetId=spreadsheet_id, range=sheet_name).execute()
data = sheet.get('values', [])

# Converter os dados em um DataFrame do pandas
df = pd.DataFrame(data[1:], columns=data[0])


import requests

# Função para obter os dados de insights de posts do Instagram
def get_instagram_insights(client_id):
    # Configurar a URL da API do Instagram
    url = f'https://api.instagram.com/v1/users/{client_id}/media/recent/?access_token=YOUR_ACCESS_TOKEN'

    # Fazer a requisição para a API do Instagram
    response = requests.get(url)
    data = response.json()

    # Extrair os dados de insights de posts
    insights = []
    for post in data['data']:
        insights.append({
            'client': client_id,
            'media_id': post['id'],
            'saved': post['saved'],
            'video_views': post['video_views'],
            'reach': post['reach'],
            'engagement': post['engagement'],
            'impressions': post['impressions'],
            'date': post['created_time'],
            'likes': post['likes']['count'],
            'comments': post['comments']['count'],
            'caption': post['caption']['text'],
            'shortcode': post['shortcode'],
            'permalink': post['link'],
            'product_type': post['product_type'],
            'thumbnail': post['images']['thumbnail']['url'],
            'media_url': post['images']['standard_resolution']['url'],
            'shares': post['shares']['count'],
            'media_type': post['type'],
            'updated': post['updated_time'],
            'postTimeStamp': post['created_time'],
            'postDateTime': post['created_time'],
            'imagem': post['images']['standard_resolution']['url'],
            'instagram_id': post['user']['id']
        })

    return insights

# Obter os dados de insights de posts para cada cliente
insights_data = []
for client_id in df['IDInstagram']:
    insights = get_instagram_insights(client_id)
    insights_data.extend(insights)

# Converter os dados em um DataFrame do pandas
insights_df = pd.DataFrame(insights_data)

# Nome da tabela no Google BigQuery
table_name = 'YOUR_TABLE_NAME'

# Enviar os dados para o Google BigQuery
table_ref = bigquery_client.dataset('mandala-362401.instagram_insights').table(table_name)
job_config = bigquery.LoadJobConfig()
job_config.write_disposition = 'WRITE_APPEND'
job = bigquery_client.load_table_from_dataframe(insights_df, table_ref, job_config=job_config)
job.result()#arquivo /home/david/Documentos/mandala/credentials.json
{"type": "service_account",
"project_id": "mandala-362401",
"private_key_id": "6023c9cd41f18c8a4918fe3451a2e158b33b3b06",
"private_key": "-----BEGIN PRIVATE KEY-----\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCymc+EyxCewIQt\nVAlFUXqIrD7krI244d+N9CihhjULtPBNoa4ws0InUE+StUwjkbmD5LpH2RP4berP\nhDESuENnjsg6P+I4FFp4T9zWs8AFRuii9cSpUi/HOaSd4Cmya+g5Df+i3lwXi286\nSE2UnigfH/Povf3YrvsE+pdAa2D4VWvfbl2ZqQKfaEmg6gTaBbmLNn5TPxJivP9o\nzIhAlaIOC0le4Kn5azg44uMgwduipVMGyv3btz701LoWHhCq/WFmD0f3lgftlSk7\n/fqrfBnMerGQ9US5aCywEfhdNrggD0s/meJGR0zTepsXBev93tkDzF93PJjkCXbC\nhuLqTW8ZAgMBAAECggEAALQ7aJR30QPBoaFE/apARQJWfyF65W73jxSCZC1z6ldm\nBAz1IqRg/j+TMSWsmTAIebtjRcFJEnkT0XyYuuzsjMgIwSFlft2tCseUwtSkZ/Ny\nDcsHVDH2WUDHNPMqcrO8xW0EGHV//NsJF2TbGM2J2nn6KdJCwCUZfTdnWep5Lp7k\nABH+7S+o53u053iY4blvq5bs/WgYX6x+3T1SqqpzYLP+aSjhupl1tt0GSyzQ1vWF\nShJlxs84ayJI5keL1GMHp+L4nuNr/C7yARcMzDUn8K7wed2/hBsLkWV/6uuY4GNw\n5zHxUW+uyPAMVIFSI1oup0J7Oi9YrSaNkntzNbZeOQKBgQDeu41k5cVp8p+ftoYS\nqyeFChnD5RZrf4KoiN3ivJY1oD8hQIRDZm6MFT75/5z/fCWpAm46cxRPTVEu0iqM\nSRIStoikSi4rYVdXVdyG8TpbpMgZ21wdjZaPjvkuqMrTrh4G1bHRAykTv+4avYXg\nJ6GJCUs847BX6fvXHwbkRuFtnQKBgQDNRtN+JFpQiLam0Z2eQsnxddskwbrtk75h\n/D/Jl3B6LPdpB3ZNKuHd9yaIQ25vbENjYvEVjjDOFLTSp0E/3aNldJ8/wh7/La0d\nM3KwhN7Xh+lacCQhgDjj2ziajuhgsPF5SzXDsrpI1ol/dlk0qKA+aGqyC3tw6OAv\nV2J3ry8MrQKBgQCkeWT5K/9ytDqRiwxIfuEJCiNqmCHNMfS/FYqcY1ycrv/PQ0Ao\nMVzSzuGZZNt/giKhQm05dj96LAMWCxZmT5MsBGS0xR6A5DnGAV5+u2W3xOAK0ASe\nwi57Rj3V6ckVNY9wxp6vVKEht2pRjsBsfXd4pUdM6GoREXTqLzw8l+bhtQKBgBhS\nXPqkKgNCv4lyap92wGCYmzd2sMQ3biZD8fbbt5ryOvo5xR2NiCd5ghpBCxOumylq\nbrAkIco5D9eps4RyqUp7D+dJA80uR0Wfc+ZQR+r3koGBqfZCL/tnXQSLDCNws5uw\nepVOVt4MdUwh5J3loN7kFkg0LhMJtI5HZ0ZQ/l0dAoGAFAuGVwHJa25uiIu3Wg0o\nQy64HLeDz9iUvSUnqiEF/+Kng03L2gJBwdD7XX7G/p/1CCDC22Qxgoe/OZMZv8PO\nesLVDzKZuM9/MZr04mRhqxhedVBMk8YYB2a1IHnxdPcmafzbCzFxaENrkV4LL5cE\nX+7/pSGwAB+XeGSZ01D4O2s=\n-----END PRIVATE KEY-----\n",
"client_email": "mandala-175@mandala-362401.iam.gserviceaccount.com",
"client_id": "107329730774126398547",
"auth_uri": "https://accounts.google.com/o/oauth2/auth",
"token_uri": "https://oauth2.googleapis.com/token",
"auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs",
"client_x509_cert_url": "https://www.googleapis.com/robot/v1/metadata/x509/mandala-175%40mandala-362401.iam.gserviceaccount.com",
"universe_domain": "googleapis.com"}
#arquivo /home/david/Documentos/mandala/instagram_insights.py
import requests
import json
from datetime import date, timedelta
from google_sheets import get_filtered_instagram_ids, get_google_sheets_config_data, authenticate_google_sheets, open_spreadsheet
from facebook_graph_api import check_and_refresh_token

def get_instagram_posts(instagram_id, access_token):
    sixty_days_ago = (date.today() - timedelta(days=60)).strftime('%Y-%m-%d')
    url = f"https://graph.facebook.com/v18.0/{instagram_id}/media"
    params = {
        'access_token': access_token,
        'since': sixty_days_ago
    }
    response = requests.get(url, params=params)
    posts = response.json().get('data', [])  # Handle the case when 'data' key is not present in the response
    return posts

def get_post_insights(post_id, access_token):
    url = f"https://graph.facebook.com/v18.0/{post_id}/insights"
    params = {
        'access_token': access_token
    }
    response = requests.get(url, params=params)
    insights = response.json()
    return insights
 
with open('config.json') as config_file:
    config_data = json.load(config_file)

facebook_app_id = config_data['facebookAPI']['app_id']
facebook_app_secret = config_data['facebookAPI']['app_secret']
access_token = config_data['facebookAPI']['access_token']

# Ensure access token is refreshed if needed
access_token = check_and_refresh_token(facebook_app_id, facebook_app_secret, access_token)

config_data['facebookAPI']['access_token'] = access_token
with open('config.json', 'w') as config_file:
    json.dump(config_data, config_file)

google_config = get_google_sheets_config_data()
auth_client = authenticate_google_sheets(google_config=google_config)
spreadsheet = open_spreadsheet(auth_client=auth_client, google_config=google_config)
filtered_instagram_ids = get_filtered_instagram_ids(spreadsheet=spreadsheet)

posts = [get_instagram_posts(config_data, access_token) for id in filtered_instagram_ids]

insights = [get_post_insights(post, access_token) for post in posts]

print(insights)
#arquivo /home/david/Documentos/mandala/bigquery.py
#bigquery.py
#bigquery.py
from google.cloud import bigquery

def insert_into_bigquery(project_id, dataset_id, table_id, data):
    client = bigquery.Client(project=project_id)
    dataset_ref = client.dataset(dataset_id)
    table_ref = dataset_ref.table(table_id)

    errors = client.insert_rows(table_ref, data)
    if errors:
        raise Exception(f"Error inserting data into BigQuery: {errors}")
#arquivo /home/david/Documentos/mandala/bigquery_esquema.txt
#arquivo /home/david/Documentos/mandala/config.json
{"scopes": "https://www.googleapis.com/auth/spreadsheets", "type": "service_account", "project_id": "mandala-362401", "private_key_id": "6023c9cd41f18c8a4918fe3451a2e158b33b3b06", "private_key": "-----BEGIN PRIVATE KEY-----\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCymc+EyxCewIQt\nVAlFUXqIrD7krI244d+N9CihhjULtPBNoa4ws0InUE+StUwjkbmD5LpH2RP4berP\nhDESuENnjsg6P+I4FFp4T9zWs8AFRuii9cSpUi/HOaSd4Cmya+g5Df+i3lwXi286\nSE2UnigfH/Povf3YrvsE+pdAa2D4VWvfbl2ZqQKfaEmg6gTaBbmLNn5TPxJivP9o\nzIhAlaIOC0le4Kn5azg44uMgwduipVMGyv3btz701LoWHhCq/WFmD0f3lgftlSk7\n/fqrfBnMerGQ9US5aCywEfhdNrggD0s/meJGR0zTepsXBev93tkDzF93PJjkCXbC\nhuLqTW8ZAgMBAAECggEAALQ7aJR30QPBoaFE/apARQJWfyF65W73jxSCZC1z6ldm\nBAz1IqRg/j+TMSWsmTAIebtjRcFJEnkT0XyYuuzsjMgIwSFlft2tCseUwtSkZ/Ny\nDcsHVDH2WUDHNPMqcrO8xW0EGHV//NsJF2TbGM2J2nn6KdJCwCUZfTdnWep5Lp7k\nABH+7S+o53u053iY4blvq5bs/WgYX6x+3T1SqqpzYLP+aSjhupl1tt0GSyzQ1vWF\nShJlxs84ayJI5keL1GMHp+L4nuNr/C7yARcMzDUn8K7wed2/hBsLkWV/6uuY4GNw\n5zHxUW+uyPAMVIFSI1oup0J7Oi9YrSaNkntzNbZeOQKBgQDeu41k5cVp8p+ftoYS\nqyeFChnD5RZrf4KoiN3ivJY1oD8hQIRDZm6MFT75/5z/fCWpAm46cxRPTVEu0iqM\nSRIStoikSi4rYVdXVdyG8TpbpMgZ21wdjZaPjvkuqMrTrh4G1bHRAykTv+4avYXg\nJ6GJCUs847BX6fvXHwbkRuFtnQKBgQDNRtN+JFpQiLam0Z2eQsnxddskwbrtk75h\n/D/Jl3B6LPdpB3ZNKuHd9yaIQ25vbENjYvEVjjDOFLTSp0E/3aNldJ8/wh7/La0d\nM3KwhN7Xh+lacCQhgDjj2ziajuhgsPF5SzXDsrpI1ol/dlk0qKA+aGqyC3tw6OAv\nV2J3ry8MrQKBgQCkeWT5K/9ytDqRiwxIfuEJCiNqmCHNMfS/FYqcY1ycrv/PQ0Ao\nMVzSzuGZZNt/giKhQm05dj96LAMWCxZmT5MsBGS0xR6A5DnGAV5+u2W3xOAK0ASe\nwi57Rj3V6ckVNY9wxp6vVKEht2pRjsBsfXd4pUdM6GoREXTqLzw8l+bhtQKBgBhS\nXPqkKgNCv4lyap92wGCYmzd2sMQ3biZD8fbbt5ryOvo5xR2NiCd5ghpBCxOumylq\nbrAkIco5D9eps4RyqUp7D+dJA80uR0Wfc+ZQR+r3koGBqfZCL/tnXQSLDCNws5uw\nepVOVt4MdUwh5J3loN7kFkg0LhMJtI5HZ0ZQ/l0dAoGAFAuGVwHJa25uiIu3Wg0o\nQy64HLeDz9iUvSUnqiEF/+Kng03L2gJBwdD7XX7G/p/1CCDC22Qxgoe/OZMZv8PO\nesLVDzKZuM9/MZr04mRhqxhedVBMk8YYB2a1IHnxdPcmafzbCzFxaENrkV4LL5cE\nX+7/pSGwAB+XeGSZ01D4O2s=\n-----END PRIVATE KEY-----\n", "client_email": "mandala-175@mandala-362401.iam.gserviceaccount.com", "client_id": "107329730774126398547", "auth_uri": "https://accounts.google.com/o/oauth2/auth", "token_uri": "https://oauth2.googleapis.com/token", "auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs", "client_x509_cert_url": "https://www.googleapis.com/robot/v1/metadata/x509/mandala-175%40mandala-362401.iam.gserviceaccount.com", "universe_domain": "googleapis.com", "googleSheets": {"spreadsheetId": "1-w9SVZIDUDCNKESOwjQL56-o-QwxnqSL4p3d3uZ3MQo", "sheetId": "1288533395", "includesHeaders": true, "tableFirstRow": "A1:AZ1", "filter": {"from": "drive", "valueRenderOption": "FORMATTED_VALUE", "dateTimeRenderOption": "FORMATTED_STRING", "limit": 999, "sortOrder": "asc", "orderBy": "cliente"}}, "instagramAPI": {"client_id": "887066019488238", "client_secret": "22759af7751935e56a359c52be60d5f6", "redirect_uri": "http://localhost:8000/callback", "access_token": "EAAcSwb62W4MBO3ZA97ZAy4NvZBI0plU9k4KNFrWAxuiOV3i4lq95vZA2qiPbgnYlDZAWQPZCe8ZCDgNzQB7sPTCOM3mPqOxhzMsZABD3VWJe9azoJMoG1tPEJZAoz5Uy1Vc1nIAnXiy65ZBLGfICJrZC5oLzNXbuN7xE8lwZCkOuzjy4UTN8EdkoD5A26CHqcVixhtAjZBPxUKmfdGb6W8iYpwDk7TqiZCzZCmvkGZCgwM7sOmnzksE5bYW7wKx77OsRX6YpyQZDZD"}, "facebookAPI": {"app_id": "1990948174584707", "app_secret": "22759af7751935e56a359c52be60d5f6", "redirect_uri": "http://localhost:8000/callback", "access_token": "EAAcSwb62W4MBO7ti29CIL9vZClZBz6MlA9WiK6HFw1fRbD0JwnEWfashcmLHZAQMIVxIMBuhJZBJYfgpg4T9YocDle7fYXZBMXk6h4Lmj25PwhXdU8PKZAIxSHGTzyO4ty2A4ZBxPy1fM6iFzsQoMLbGdy6EZCVT3K3esRvOZBSmVvdXrZCqlibSJZATLEd"}, "googleBigQueryAPI": {"credentials": "/home/david/Documentos/codeinterpreter/credentials.json", "project_id": "mandala-362401", "dataset_id": "mandala-362401.instagram_insights", "table_id": "mandala-362401.instagram_insights.post_insights_copy"}}#arquivo /home/david/Documentos/mandala/google_sheets.py

import json
import gspread
from oauth2client.service_account import ServiceAccountCredentials


def get_google_sheets_config_data():
    # Load configurations from config.json file
    with open('config.json') as json_data_file:
        google_config = json.load(json_data_file)
    return google_config
    
# Authenticate and open Google Sheets spreadsheet
def authenticate_google_sheets(google_config):
    # Get the scopes from the config data
    scopes = google_config['scopes']

    # Authenticate and open Google Sheets spreadsheet
    credentials = ServiceAccountCredentials.from_json_keyfile_dict(google_config, scopes)
    client = gspread.authorize(credentials)
    return client


def open_spreadsheet(auth_client, google_config):
    spreadsheet = auth_client.open_by_key(google_config['googleSheets']['spreadsheetId'])
    
    return spreadsheet

#Get the Instagram ID for all clients active, with permissions and under "Redes Sociais" contract
def get_filtered_instagram_ids(spreadsheet):
    # Get all values from the worksheet
    all_values = spreadsheet.sheet1.get_all_records()  # Assume you are working with the first worksheet. Adjust the index if needed.    # Filter the data based on conditions (ativo=True, permissoes=True, redesSociais=True)
    filtered_data = [record['IDInstagram'] for record in all_values if record.get('IDInstagram') and record.get('Ativo') and record.get('permissoes') and record.get('redesSociais')]

    return filtered_data

google_config = get_google_sheets_config_data()
auth_client = authenticate_google_sheets(google_config=google_config)
spreadsheet = open_spreadsheet(auth_client=auth_client, google_config=google_config)
filtered_instagram_ids = get_filtered_instagram_ids(spreadsheet=spreadsheet)
print(filtered_instagram_ids)
#arquivo /home/david/Documentos/mandala/facebook_graph_api.py
import requests
import time
import json

import json
import requests

def refresh_access_token(app_id, app_secret, current_token):
    url = f"https://graph.facebook.com/oauth/access_token?grant_type=fb_exchange_token&client_id={app_id}&client_secret={app_secret}&fb_exchange_token={current_token}"
    response = requests.get(url).json()
    new_token = response.get("access_token")
    
    # Atualizar o arquivo config.json com o novo token
    with open('config.json', 'r') as config_file:
        config_data = json.load(config_file)
    
    config_data['facebookAPI']['access_token'] = new_token
    
    with open('config.json', 'w') as config_file:
        json.dump(config_data, config_file, indent=4)
    
    return new_token


def check_and_refresh_token(app_id, app_secret, current_token):
    url = f"https://graph.facebook.com/debug_token?input_token={current_token}&access_token={current_token}"
    response = requests.get(url).json()
    print(response)
    expire_time = response["data"]["expires_at"]
    if (expire_time - time.time()) < (3 * 24 * 60 * 60):
        return refresh_access_token(app_id, app_secret, current_token)
    return current_token
#arquivo /home/david/Documentos/mandala/main.py
from google_sheets import update_google_sheets
from instagram_api import get_instagram_media_data
from bigquery import insert_data_to_bigquery

try:
    # Obter dados do Instagram
    instagram_data = get_instagram_media_data()
    
    # Atualizar planilha do Google Sheets
    update_google_sheets(instagram_data)
    
    # Inserir dados no BigQuery
    insert_data_to_bigquery(instagram_data)

    print("Dados inseridos com sucesso no Google Sheets e BigQuery!")

except Exception as e:
    print("Erro: ", e)
