import streamlit as st
import pandas as pd
from sqlalchemy.orm import Session
from common.models import AttentionPoints  # Assumindo que o modelo AttentionPoints est√° neste caminho
import logging
from page_entregas.attention_points.attention_points_modal import edit_modal, delete_modal


def display_attention_points_table(cliente_id, data_inicio, data_fim, engine):
    """
    Exibe a tabela de pontos de aten√ß√£o para um cliente, em um intervalo de datas,
    com bot√µes de Editar e Excluir.
    """
    try:
        with Session(bind=engine) as session:
            attention_points = session.query(AttentionPoints).filter(
                AttentionPoints.client_id == cliente_id,
                AttentionPoints.date.between(data_inicio, data_fim)
            ).order_by(AttentionPoints.date.desc()).all()

        if not attention_points:
            st.info("Nenhum ponto de aten√ß√£o encontrado para o per√≠odo selecionado.")
        else:
            data = []
            for ap in attention_points:
                data.append({
                    'Data': ap.date.strftime('%d %b. %Y'),
                    'Ponto de Aten√ß√£o': ap.attention_point,
                    'ID': ap.id
                })

            attention_points_df = pd.DataFrame(data)

            # Inicializar vari√°veis de estado para edi√ß√£o e exclus√£o
            if 'edit_item_id' not in st.session_state:
                st.session_state['edit_item_id'] = None
            if 'edit_modal_open' not in st.session_state:
                st.session_state['edit_modal_open'] = False
            if 'delete_item_id' not in st.session_state:
                st.session_state['delete_item_id'] = None
            if 'delete_modal_open' not in st.session_state:
                st.session_state['delete_modal_open'] = False

            # Exibir a tabela com bot√µes de a√ß√£o
            for index, row in attention_points_df.iterrows():
                col1, col2, col3, col4 = st.columns([2, 7, 1, 1])
                col1.write(row['Data'])
                col2.write(row['Ponto de Aten√ß√£o'])
                if col3.button('‚úèÔ∏è', key=f'edit_{row["ID"]}', help='Editar'):
                    st.session_state['edit_item_id'] = row['ID']
                    st.session_state['edit_modal_open'] = True  # Abrir modal de edi√ß√£o
                if col4.button('üóëÔ∏è', key=f'delete_{row["ID"]}', help='Excluir'):
                    st.session_state['delete_item_id'] = row['ID']
                    st.session_state['delete_modal_open'] = True  # Abrir modal de exclus√£o

            # Processar edi√ß√£o - abrir o modal ao clicar no bot√£o de editar
            if st.session_state['edit_modal_open']:
                edit_modal(engine, st.session_state['edit_item_id'])

            # Processar exclus√£o - abrir o modal ao clicar no bot√£o de excluir
            if st.session_state['delete_modal_open']:
                delete_modal(engine, st.session_state['delete_item_id'])

    except Exception as e:
        st.error(f"Erro ao carregar pontos de aten√ß√£o: {e}")
        logging.error(f"Erro ao carregar pontos de aten√ß√£o: {e}")
